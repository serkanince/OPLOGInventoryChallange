// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OPLOGInventory.Infrastructure.DB;

namespace OPLOGInventory.Infrastructure.Migrations
{
    [DbContext(typeof(MSSQLDBContext))]
    partial class MSSQLDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.ApiUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ApiUser");

                    b.HasData(
                        new
                        {
                            ID = new Guid("acc22dfe-0f3d-4dd4-914b-b8d0437a0d36"),
                            Password = "seller",
                            Role = "Seller",
                            Username = "seller"
                        },
                        new
                        {
                            ID = new Guid("6d472649-123b-4f67-bba2-b2b8005a5fb1"),
                            Password = "operator",
                            Role = "Operator",
                            Username = "operator"
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Barcode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("Barcode");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b8c63ba9-8a85-4df6-9f78-211a073ea597"),
                            Label = "Barcode--1",
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Container", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("Label");

                    b.HasIndex("LocationId");

                    b.ToTable("Container");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c42e807f-8c9e-414a-bf42-385f648fff2c"),
                            Label = "Container-X",
                            LocationId = new Guid("ee63ac91-eb6a-4ffd-ae74-87fac0f6069c")
                        },
                        new
                        {
                            ID = new Guid("54218183-ce7e-4c9c-b87c-9a277e708fb4"),
                            Label = "Container-Y",
                            LocationId = new Guid("eee32b86-f018-4881-bb65-94fbfd17429a")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Dimension", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Dimension");

                    b.HasData(
                        new
                        {
                            ID = new Guid("921d4aee-7c99-4ffb-bdbb-d77c3bf882d7"),
                            Height = 100m,
                            Length = 10m,
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            Weight = 50m,
                            Width = 200m
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.InventoryItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LineItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContainerId");

                    b.HasIndex("LineItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryItem");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b26b0aec-369c-47e5-8e23-b5b150eb8a29"),
                            ContainerId = new Guid("c42e807f-8c9e-414a-bf42-385f648fff2c"),
                            LineItemId = new Guid("76bd9f35-3415-45d4-a171-70f846f2d140"),
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            Type = 3
                        },
                        new
                        {
                            ID = new Guid("cd8ab84e-1eac-4542-a53f-58cac95b6cff"),
                            ContainerId = new Guid("c42e807f-8c9e-414a-bf42-385f648fff2c"),
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("7ac47c36-6b2a-45d9-b1c8-466919185858"),
                            ContainerId = new Guid("54218183-ce7e-4c9c-b87c-9a277e708fb4"),
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("c16d79cf-6511-455f-9c64-0ccf6e55bd09"),
                            ContainerId = new Guid("54218183-ce7e-4c9c-b87c-9a277e708fb4"),
                            ProductId = new Guid("37f2c089-31d9-4baf-b547-4feab93588e1"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("c24b3ea1-9df2-44dd-bcf5-9d6dc3f4d26f"),
                            ContainerId = new Guid("54218183-ce7e-4c9c-b87c-9a277e708fb4"),
                            ProductId = new Guid("37f2c089-31d9-4baf-b547-4feab93588e1"),
                            Type = 1
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.LineItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SalesOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("LineItem");

                    b.HasData(
                        new
                        {
                            ID = new Guid("76bd9f35-3415-45d4-a171-70f846f2d140"),
                            ProductId = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            Quantity = 1L,
                            SalesOrderId = new Guid("164362cc-9b19-4b62-a9ac-07b8927a5a1c")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Location", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("x")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("y")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("z")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            ID = new Guid("ee63ac91-eb6a-4ffd-ae74-87fac0f6069c"),
                            x = 11m,
                            y = 11m,
                            z = 11m
                        },
                        new
                        {
                            ID = new Guid("eee32b86-f018-4881-bb65-94fbfd17429a"),
                            x = 11m,
                            y = 22m,
                            z = 11m
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DimensionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("DimensionId");

                    b.HasIndex("SKU");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = new Guid("feee0d3a-97b0-4963-b6fd-3050133f6058"),
                            DimensionId = new Guid("921d4aee-7c99-4ffb-bdbb-d77c3bf882d7"),
                            ImageUrl = "image-url",
                            Name = "Coffee Mug Red, model no.1",
                            SKU = "CM-1-R"
                        },
                        new
                        {
                            ID = new Guid("37f2c089-31d9-4baf-b547-4feab93588e1"),
                            DimensionId = new Guid("921d4aee-7c99-4ffb-bdbb-d77c3bf882d7"),
                            ImageUrl = "image-url",
                            Name = "Coffee Cup Yellow, model no.5",
                            SKU = "CC-5-Y"
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.SalesOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReferanceNo");

                    b.ToTable("SalesOrder");

                    b.HasData(
                        new
                        {
                            ID = new Guid("164362cc-9b19-4b62-a9ac-07b8927a5a1c"),
                            IsShipped = true,
                            ReceiverAddress = "Çankaya Ankara TR",
                            ReceiverName = "Serkan İnce",
                            ReferanceNo = "SRK06",
                            ShippedDate = new DateTime(2020, 7, 20, 0, 4, 28, 69, DateTimeKind.Local).AddTicks(8421)
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Barcode", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Product", "Product")
                        .WithMany("Barcodes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Container", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Location", "Location")
                        .WithMany("LocatedContainers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.InventoryItem", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Container", "Container")
                        .WithMany("Contents")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPLOGInventory.Domain.Entity.LineItem", "LineItem")
                        .WithMany("InventoryItem")
                        .HasForeignKey("LineItemId");

                    b.HasOne("OPLOGInventory.Domain.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.LineItem", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.SalesOrder", "SalesOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Product", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Dimension", "Dimension")
                        .WithMany()
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
