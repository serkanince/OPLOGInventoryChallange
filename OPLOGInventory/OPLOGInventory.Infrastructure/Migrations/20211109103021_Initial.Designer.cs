// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OPLOGInventory.Infrastructure.DB;

namespace OPLOGInventory.Data.Migrations
{
    [DbContext(typeof(PostgreSqlDBContext))]
    [Migration("20211109103021_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.ApiUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("ApiUser");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0df03e8e-6a12-4046-92e4-5243a00ea415"),
                            Password = "seller",
                            Role = "Seller",
                            Username = "seller"
                        },
                        new
                        {
                            ID = new Guid("e5851510-c82c-47cc-aa78-7e22153d2049"),
                            Password = "operator",
                            Role = "Operator",
                            Username = "operator"
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Barcode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("Barcode");

                    b.HasData(
                        new
                        {
                            ID = new Guid("3ec073f6-f0aa-4583-a287-d35b0d6d6dc3"),
                            Label = "Barcode--1",
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Container", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("Label");

                    b.HasIndex("LocationId");

                    b.ToTable("Container");

                    b.HasData(
                        new
                        {
                            ID = new Guid("8ef1de11-f43c-47b8-b7c2-60edbb9a6e4f"),
                            Label = "Container-X",
                            LocationId = new Guid("b1bd5849-6315-44af-8501-886fb041d98b")
                        },
                        new
                        {
                            ID = new Guid("1c3c35b4-f9e4-42ac-877d-c6512628a6ee"),
                            Label = "Container-Y",
                            LocationId = new Guid("e55e43db-4b1f-4e94-bcf8-0e67639c0cae")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Dimension", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Length")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Width")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("Dimension");

                    b.HasData(
                        new
                        {
                            ID = new Guid("8a3b3eb5-aa0d-442e-9e41-9b3b57f2dcc7"),
                            Height = 100m,
                            Length = 10m,
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            Weight = 50m,
                            Width = 200m
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.InventoryItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LineItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ContainerId");

                    b.HasIndex("LineItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryItem");

                    b.HasData(
                        new
                        {
                            ID = new Guid("a43a103a-fa39-4c61-b306-e44ceb46ca92"),
                            ContainerId = new Guid("8ef1de11-f43c-47b8-b7c2-60edbb9a6e4f"),
                            LineItemId = new Guid("dffcff84-0115-410b-a3a6-ed1716ea30c2"),
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            Type = 3
                        },
                        new
                        {
                            ID = new Guid("41f5fe6d-c34b-44e9-95b5-d541d3f71259"),
                            ContainerId = new Guid("8ef1de11-f43c-47b8-b7c2-60edbb9a6e4f"),
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("7005b649-0ce1-42cf-aebd-f38b99aaebd6"),
                            ContainerId = new Guid("1c3c35b4-f9e4-42ac-877d-c6512628a6ee"),
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("2073b3b9-69b8-4868-be06-22b936372224"),
                            ContainerId = new Guid("1c3c35b4-f9e4-42ac-877d-c6512628a6ee"),
                            ProductId = new Guid("56350ff4-0c59-4336-b52f-2784b3748525"),
                            Type = 1
                        },
                        new
                        {
                            ID = new Guid("8fb89ae7-6bba-433d-94f8-3f2f0ca4d35d"),
                            ContainerId = new Guid("1c3c35b4-f9e4-42ac-877d-c6512628a6ee"),
                            ProductId = new Guid("56350ff4-0c59-4336-b52f-2784b3748525"),
                            Type = 1
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.LineItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SalesOrderId")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("LineItem");

                    b.HasData(
                        new
                        {
                            ID = new Guid("dffcff84-0115-410b-a3a6-ed1716ea30c2"),
                            ProductId = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            Quantity = 1L,
                            SalesOrderId = new Guid("1906ce65-d328-4efb-878e-94bffcdeafe6")
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Location", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("x")
                        .HasColumnType("numeric");

                    b.Property<decimal>("y")
                        .HasColumnType("numeric");

                    b.Property<decimal>("z")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b1bd5849-6315-44af-8501-886fb041d98b"),
                            x = 11m,
                            y = 11m,
                            z = 11m
                        },
                        new
                        {
                            ID = new Guid("e55e43db-4b1f-4e94-bcf8-0e67639c0cae"),
                            x = 11m,
                            y = 22m,
                            z = 11m
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DimensionId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DimensionId");

                    b.HasIndex("SKU");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = new Guid("f68b5b5f-2e40-49ef-a7c0-32c5fb9509dc"),
                            DimensionId = new Guid("8a3b3eb5-aa0d-442e-9e41-9b3b57f2dcc7"),
                            ImageUrl = "image-url",
                            Name = "Coffee Mug Red, model no.1",
                            SKU = "CM-1-R"
                        },
                        new
                        {
                            ID = new Guid("56350ff4-0c59-4336-b52f-2784b3748525"),
                            DimensionId = new Guid("8a3b3eb5-aa0d-442e-9e41-9b3b57f2dcc7"),
                            ImageUrl = "image-url",
                            Name = "Coffee Cup Yellow, model no.5",
                            SKU = "CC-5-Y"
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.SalesOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsShipped")
                        .HasColumnType("boolean");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferanceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.HasIndex("ReferanceNo");

                    b.ToTable("SalesOrder");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1906ce65-d328-4efb-878e-94bffcdeafe6"),
                            IsShipped = true,
                            ReceiverAddress = "Çankaya Ankara TR",
                            ReceiverName = "Serkan İnce",
                            ReferanceNo = "SRK06",
                            ShippedDate = new DateTime(2021, 11, 9, 13, 30, 20, 993, DateTimeKind.Local).AddTicks(9323)
                        });
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Barcode", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Product", "Product")
                        .WithMany("Barcodes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Container", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Location", "Location")
                        .WithMany("LocatedContainers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.InventoryItem", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Container", "Container")
                        .WithMany("Contents")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPLOGInventory.Domain.Entity.LineItem", "LineItem")
                        .WithMany("InventoryItem")
                        .HasForeignKey("LineItemId");

                    b.HasOne("OPLOGInventory.Domain.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.LineItem", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.SalesOrder", "SalesOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPLOGInventory.Domain.Entity.Product", b =>
                {
                    b.HasOne("OPLOGInventory.Domain.Entity.Dimension", "Dimension")
                        .WithMany()
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
